C51 COMPILER V9.60.0.0   MAIN                                                              04/05/2021 09:38:51 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /**********************************************************
   2          EE337: ADC IC MCP3008 interfacing with pt-51
   3          (1) Complete spi_init() function from spi.h 
   4          (2) Uncomment LM35 interfacing code from main function
   5              Choose appropriate scaling factor for converting temperature 
   6              sensor reading sampled using ADC such that it will be in 
   7              degree Celsius and display it on the LCD)
   8          ***********************************************************/
   9          
  10          #include <at89c5131.h>
  11          #include "lcd.h"                                        //Driver for interfacing lcd 
  12          #include "mcp3008.h"                                    //Driver for interfacing ADC ic MCP3008
  13          
  14          
  15          char adc_ip_data_ascii[6]={0,0,0,0,0,'\0'};             //string array for saving ascii of input sample
  16          code unsigned char display_msg1[]="Volt.: ";            //Display msg on 1st line of lcd
  17          code unsigned char display_msg2[]=" mV";                //Display msg on 2nd line of lcd
  18          unsigned char display_msg3[]={0,0,0,'.',0,' ',223,'C','\0'};//"xxx °C", Display msg on 2nd line of lcd
  19          code unsigned char display_msg4[]="Temp.: ";            //Display msg on 2nd line of lcd
  20          
  21          
  22          void main(void)
  23          {
  24   1        int j=0;
  25   1        unsigned int adc_data=0;
  26   1        //float temperature;
  27   1        
  28   1        spi_init();                                         
  29   1        adc_init();
  30   1        lcd_init();
  31   1        
  32   1        
  33   1        
  34   1        while(1)
  35   1        {
  36   2          unsigned int x;
  37   2          float temperature;
  38   2          temperature = 30.0;
  39   2           
  40   2          x = adc(0);                                         //Read analog value from 0th channel of ADC Ic MCP3008
  41   2          adc_data = (unsigned int) (x*3.2258);               //Converting received 10 bits value to milli volt (3.3*1000
             -*i/p /1023)
  42   2          
  43   2          lcd_cmd(0x80);                                      //Move cursor to first line
  44   2          lcd_write_string(display_msg1);                     //Display "Volt: " on first line of lcd
  45   2          
  46   2          int_to_string(adc_data,adc_ip_data_ascii);          //Converting integer to string of ascii
  47   2          
  48   2          lcd_write_string(adc_ip_data_ascii);                //Print analog sampled input on lcd
  49   2          lcd_write_string(display_msg2);                     //Display "XXXXX mV"
  50   2          
  51   2        
  52   2      
  53   2          x = adc(7);                                         //Read analog value from 7th channel of ADC Ic MCP3008
C51 COMPILER V9.60.0.0   MAIN                                                              04/05/2021 09:38:51 PAGE 2   

  54   2          
  55   2          
  56   2          //Use appropriate multiplier instead of 0.1 for converting it to degree Celsius
  57   2          
  58   2          temperature = (x*0.32258);                              //NOTE: LM35 O/P: 10mV/°C, Refer to LM35 datasheet for more in
             -formation
  59   2        
  60   2      
  61   2          
  62   2          x = (unsigned int) (temperature*10.0);              //Convert float value to unsigned int 
  63   2                                                              //Multiply with 10 to retain 0.1 deg C as a least count of temp
  64   2          int_to_string(x,adc_ip_data_ascii);                 //Converting integer to string of ascii
  65   2          lcd_cmd(0xC0);                                      //Move cursor to 2nd line of LCD
  66   2          lcd_write_string(display_msg4);
  67   2          display_msg3[0] = adc_ip_data_ascii[1];             //Convert temp ascii string to appropriate value 
  68   2          display_msg3[1] = adc_ip_data_ascii[2];
  69   2          display_msg3[2] = adc_ip_data_ascii[3];
  70   2          display_msg3[4] = adc_ip_data_ascii[4];
  71   2                           
  72   2          lcd_write_string(display_msg3);                     //Print temperature sensed by sensor
  73   2        }
  74   1      }
  75          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    780    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16      34
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
